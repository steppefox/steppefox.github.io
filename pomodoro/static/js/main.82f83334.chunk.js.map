{"version":3,"sources":["components/footer/Keybindings.js","components/footer/Notifications.js","components/footer/Code.js","components/Steps.js","components/Cta.js","utils/time.js","store/actionTypes.js","store/actions.js","utils/notification.js","App.js","store/index.js","store/reducer.js","index.js"],"names":["Keybindings","react_default","a","createElement","className","Notifications","_ref","notifications","onClick","Code","href","StepItem","_ref2","viewBox","stroke","strokeWidth","fill","fillRule","fontFamily","fontSize","fontWeight","x","y","Steps","current","max","Object","toConsumableArray","Array","map","value","key","Steps_StepItem","Cta","title","disabled","formatTime","time","minutes","padTime","Math","floor","seconds","concat","calcTimeDifference","startTime","endTime","round","getUnixTimestamp","Date","now","startTimer","dispatch","getState","intervalId","pauseTimer","setInterval","endTimer","type","clearInterval","resetTimer","_getState","isFinale","count","isBreak","action","body","Notification","console","warn","permission","log","n","icon","vibrate","setTimeout","close","bind","e","error","notification","meta","sound","notificationsSet","toggle","notificationsRequest","requestPermission","handleNotificationsRequest","App","state","useSelector","maxCount","isActive","useDispatch","onStart","useCallback","onReset","handleKeyUp","code","useEffect","window","addEventListener","removeEventListener","document","classNames","container","components_Cta","src_components_Steps","footer_Keybindings","footer_Notifications","preventDefault","footer_Code","initialState","breakTime","longBreakTime","workTime","reducer","arguments","length","undefined","objectSpread2","wasPaused","pausedTime","middleware","thunk","soundsMiddleware","process","localStore","get","configureStore","createStore","applyMiddleware","apply","store","subscribe","set","onbeforeunload","rootElement","getElementById","ReactDOM","render","StrictMode","es"],"mappings":"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","file":"static/js/main.82f83334.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Keybindings = () => {\n  return (\n    <div>\n      <span className=\"link-title\">Keybindings</span>\n      <div className=\"keybindings\">\n        <div>\n          Start / Pause — <kbd>Spacebar</kbd>\n        </div>\n        <div>\n          Reset — <kbd>r</kbd>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Keybindings;\n","import React from \"react\";\n\nconst Notifications = ({ notifications, onClick }) => {\n  return (\n    <div className=\"notifications\">\n      {!notifications && (\n        <div>\n          <span onClick={onClick} className=\"link\">\n            Enable notifications\n          </span>\n          <span className=\"spacer\">|</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\n\nconst Code = () => {\n  return (\n    <a className=\"link\" href=\"http://github.com/tomspeak/pomodo.work\">\n      Code\n    </a>\n  );\n};\n\nexport default Code;\n","import React from \"react\";\nimport \"./Steps.css\";\n\nconst Steps = ({ current, max }) => {\n  return (\n    <div className=\"count\">\n      {[...Array(max)].map((value, key) => {\n        return (\n          <StepItem key={key} className={current > key ? \"is-active\" : \"\"} />\n        );\n      })}\n    </div>\n  );\n};\n\nconst StepItem = ({ className }) => {\n  return (\n    <svg className={className} viewBox=\"0 0 242 216\">\n      <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n        <text\n          fill=\"#191E3F\"\n          fontFamily=\"Zapf Dingbats\"\n          fontSize=\"300\"\n          fontWeight=\"normal\"\n        >\n          <tspan x=\"-9.95703125\" y=\"212\" fill=\"#000000\">\n            ❍\n          </tspan>\n        </text>\n      </g>\n    </svg>\n  );\n};\n\nexport default Steps;\n","import React from \"react\";\n\nconst Cta = ({ title, disabled, onClick }) => {\n  return (\n    <button disabled={disabled} className=\"button\" onClick={onClick}>\n      {title}\n    </button>\n  );\n};\n\nexport default Cta;\n","export function formatTime(time) {\n  const minutes = padTime(Math.floor(time / 60)),\n    seconds = padTime(time % 60);\n\n  return `${minutes} : ${seconds}`;\n}\n\nexport function padTime(time) {\n  time = time < 10 ? \"0\" + time : time;\n  return time;\n}\n\nexport function calcTimeDifference(startTime, endTime) {\n  return Math.round(endTime - startTime);\n}\n\nexport function getUnixTimestamp() {\n  return Math.floor(Date.now() / 1000);\n}\n","export const TIMER_START = \"TIMER_START\";\nexport const TIMER_PAUSE = \"TIMER_PAUSE\";\nexport const TIMER_RESET = \"TIMER_RESET\";\nexport const TIMER_TICK = \"TIMER_TICK\";\nexport const TIMER_END = \"TIMER_END\";\n\nexport const NOTIFICATIONS_SET = \"NOTIFICATIONS_SET\";\n","import {\n  TIMER_START,\n  TIMER_PAUSE,\n  TIMER_RESET,\n  TIMER_TICK,\n  TIMER_END,\n  NOTIFICATIONS_SET\n} from \"./actionTypes\";\n\nimport { calcTimeDifference, getUnixTimestamp } from \"../utils/time\";\n\nimport { notification } from \"./../utils/notification\";\n\nexport const startTimer = () => {\n  const startTime = getUnixTimestamp();\n\n  return (dispatch, getState) => {\n    if (getState().intervalId) {\n      return dispatch(pauseTimer(getState().intervalId));\n    }\n\n    const intervalId = setInterval(() => {\n      if (getState().time <= 0) {\n        return dispatch(endTimer(getState()));\n      }\n\n      return dispatch({\n        type: TIMER_TICK,\n        time: calcTimeDifference(startTime, getUnixTimestamp())\n      });\n    }, 1000);\n\n    return dispatch({ type: TIMER_START, intervalId, startTime });\n  };\n};\n\nexport const pauseTimer = intervalId => {\n  clearInterval(intervalId);\n  return { type: TIMER_PAUSE };\n};\n\nexport const resetTimer = () => {\n  return (dispatch, getState) => {\n    clearInterval(getState().intervalId);\n    return dispatch({ type: TIMER_RESET, intervalId: null });\n  };\n};\n\nexport const endTimer = () => {\n  return (dispatch, getState) => {\n    let { isFinale, intervalId, count, isBreak } = getState();\n\n    clearInterval(intervalId);\n\n    if (count === 4) {\n      isFinale = true;\n    }\n\n    const cycle = isBreak ? \"Break\" : \"Work\";\n    const action = isBreak ? \"work\" : \"relax\";\n\n    notification(`${cycle} has ended, time to ${action}!`);\n\n    return dispatch({\n      type: TIMER_END,\n      isFinale,\n      meta: { sound: \"notification\" }\n    });\n  };\n};\n\nexport const notificationsSet = toggle => ({\n  type: NOTIFICATIONS_SET,\n  toggle\n});\n\nexport const notificationsRequest = () => {\n  return dispatch => {\n    try {\n      Notification.requestPermission(permission =>\n        handleNotificationsRequest(permission)\n      );\n    } catch (e) {\n      console.error(\"Error: Requesting notifications permission\");\n      console.error(e);\n    }\n  };\n};\n\n/**\n * Thanks to Safari being Goofy as hell, this is neccesary\n */\nconst handleNotificationsRequest = permission => {\n  return dispatch => {\n    switch (permission) {\n      case \"granted\":\n        return dispatch(notificationsSet(true));\n      default:\n        return dispatch(notificationsSet(false));\n    }\n  };\n};\n","export const notification = body => {\n  try {\n    if (!Notification) {\n      console.warn(\"Browser does not support notifications\");\n      return false;\n    }\n\n    if (Notification.permission !== \"granted\") {\n      console.log(\"Tried to send notification when they are not enabled\");\n      return false;\n    }\n\n    const options = {\n      icon: \"/img/icon.png\",\n      vibrate: true,\n      body\n    };\n\n    const n = new Notification(\"Pomodo\", options);\n\n    setTimeout(n.close.bind(n), 5000);\n  } catch (e) {\n    console.error(\"Error: Creating notification\");\n    console.error(e);\n  }\n};\n","import React, { useEffect, useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./styles.css\";\n\nimport Keybindings from \"./components/footer/Keybindings\";\nimport Notifications from \"./components/footer/Notifications\";\nimport Code from \"./components/footer/Code\";\nimport Steps from \"./components/Steps\";\nimport Cta from \"./components/Cta\";\nimport { formatTime } from \"./utils/time\";\nimport { startTimer, resetTimer, notificationsRequest } from \"./store/actions\";\n\nexport default function App() {\n  const state = useSelector(state => state);\n  const { time, isBreak, count, maxCount, isActive, notifications } = state;\n  const dispatch = useDispatch();\n\n  const onStart = useCallback(() => {\n    dispatch(startTimer());\n  }, [dispatch]);\n\n  const onReset = useCallback(() => {\n    dispatch(resetTimer());\n  }, [dispatch]);\n\n  const handleKeyUp = useCallback(\n    e => {\n      switch (e.code) {\n        case \"Space\":\n          onStart();\n          break;\n        case \"KeyR\":\n          onReset();\n          break;\n        default:\n          break;\n      }\n    },\n    [onReset, onStart]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"keyup\", handleKeyUp);\n\n    dispatch(notificationsRequest());\n\n    return () => window.removeEventListener(\"keyup\", handleKeyUp);\n  }, [dispatch, handleKeyUp]);\n\n  useEffect(() => {\n    document.title = formatTime(time);\n  }, [time]);\n\n  const handleNotificationsClick = e => {\n    e.preventDefault();\n    dispatch(notificationsRequest());\n  };\n\n  return (\n    <div\n      className={classNames({\n        container: true\n      })}\n    >\n      <div>\n        <div className=\"box\">\n          <div className=\"timer\">{formatTime(time)}</div>\n          <Cta\n            title={isActive ? \"Pause\" : isBreak ? \"Break\" : \"Work\"}\n            onClick={onStart}\n          />\n          <Cta title={\"Reset\"} onClick={onReset} />\n          <Steps current={count} max={maxCount} />\n        </div>\n\n        <div className=\"links hide-mobile\">\n          <div className=\"link\">\n            <Keybindings />\n          </div>\n          <span className=\"spacer\">|</span>\n\n          <Notifications\n            notifications={notifications}\n            onClick={handleNotificationsClick}\n          />\n\n          <Code />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport soundsMiddleware from \"redux-sounds\";\nimport thunk from \"redux-thunk\";\nimport localStore from \"store\";\nimport reducer from \"./reducer\";\n\nexport const soundsData = {\n  notification: process.env.PUBLIC_URL + \"/assets/audio/notification.mp3\"\n};\n\nconst middleware = [thunk, soundsMiddleware(soundsData)];\nlet initialState;\n\nif (localStore.get(\"state\")) {\n  initialState = localStore.get(\"state\");\n}\n\nfunction configureStore() {\n  const store = createStore(\n    reducer,\n    initialState,\n    applyMiddleware(...middleware)\n  );\n\n  return store;\n}\n\nexport default configureStore();\n","import {\n  TIMER_START,\n  TIMER_PAUSE,\n  TIMER_RESET,\n  TIMER_TICK,\n  TIMER_END,\n  NOTIFICATIONS_SET\n} from \"./actionTypes\";\n\nexport const initialState = {\n  breakTime: 300,\n  count: 0,\n  intervalId: null,\n  isActive: false,\n  isBreak: false,\n  isFinale: false,\n  longBreakTime: 900,\n  maxCount: 4,\n  startTime: 0,\n  time: 1500,\n  workTime: 1500,\n  notifications: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case TIMER_START:\n      return {\n        ...state,\n        intervalId: action.intervalId,\n        isActive: true,\n        startTime: action.startTime\n      };\n\n    case TIMER_TICK:\n      return {\n        ...state,\n        time:\n          //IF was paused, continue from paused time\n          //IF Count >= 4 AND isBreak = longBreak\n          //ELSE IF isBreak = break\n          //ELSE = workTime\n          (state.wasPaused\n            ? state.pausedTime\n            : state.count >= 4 && state.isBreak\n            ? state.longBreakTime\n            : state.isBreak\n            ? state.breakTime\n            : state.workTime) - action.time\n      };\n\n    case TIMER_PAUSE:\n      return {\n        ...state,\n        isActive: false,\n        intervalId: null,\n        startTime: 0,\n        wasPaused: true,\n        pausedTime: state.time\n      };\n\n    case TIMER_END:\n      return {\n        ...state,\n        intervalId: null,\n        isActive: false,\n        startTime: 0,\n        isBreak: !state.isBreak,\n        count:\n          //IF the final count, reset\n          //IF we are on a break, do not increase count\n          action.isFinale ? 0 : state.isBreak ? state.count : state.count + 1,\n        time:\n          //IF we are on our last cycle and not on a break\n          //Return long break\n          //ELSE IF we are not on a break, return break time\n          //ELSE return work time\n          state.count >= 3 && !state.isBreak\n            ? state.longBreakTime\n            : !state.isBreak\n            ? state.breakTime\n            : state.workTime,\n        wasPaused: false,\n        pausedTime: 0\n      };\n\n    case TIMER_RESET:\n      return {\n        ...initialState,\n        notifications: state.notifications\n      };\n\n    case NOTIFICATIONS_SET:\n      return {\n        ...state,\n        notifications: action.toggle\n      };\n\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport localStore from \"store\";\nimport App from \"./App\";\nimport store from \"./store/index\";\nimport { pauseTimer } from \"./store/actions\";\nstore.subscribe(() => {\n  localStore.set(\"state\", store.getState());\n});\n\nwindow.onbeforeunload = () => {\n  store.dispatch(pauseTimer(store.getState().intervalId));\n};\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}